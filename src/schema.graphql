# import Post from "./generated/prisma.graphql"

type Query {
  me: User
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!

  entries(
    where: EntryWhereInput
    orderBy: EntryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Entry]!
  user(where: UserWhereUniqueInput!): User
  entry(where: EntryWhereUniqueInput!): Entry
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!
  entriesConnection(
    where: EntryWhereInput
    orderBy: EntryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): EntryConnection!
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

  # createUser(data: UserCreateInput!): User!
  createEntry(data: EntryCreateInput!): Entry!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateEntry(data: EntryUpdateInput!, where: EntryWhereUniqueInput!): Entry
  deleteUser(where: UserWhereUniqueInput!): User
  deleteEntry(where: EntryWhereUniqueInput!): Entry
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  upsertEntry(
    where: EntryWhereUniqueInput!
    create: EntryCreateInput!
    update: EntryUpdateInput!
  ): Entry!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  updateManyEntries(
    data: EntryUpdateInput!
    where: EntryWhereInput
  ): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyEntries(where: EntryWhereInput): BatchPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  # don't show password!
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  entries: [Entry!]!
}
